{"version":3,"sources":["components/pages/Home.styled.js","components/form/SearchLocationForm.styled.js","components/form/SearchLocationForm.js","hooks/useForecast.js","components/loading/Loading.js","components/error/Error.js","components/forecast/Forecast.styled.js","components/forecast/Forecast.js","components/pages/Home.js","App.js","theme/globalStyled.js","index.js"],"names":["BackDrop","styled","div","Wrap","Title","h1","cloudXAnimation","keyframes","cloudYAnimation","Cloud","top","left","delay","size","Form","form","Button","button","Input","input","SearchLocationForm","props","useState","searchValue","setSearchValue","onSubmit","e","preventDefault","onHandleSearch","placeholder","onChange","target","value","type","useForecast","data","setData","error","setError","loading","setLoading","ref","useRef","current","console","log","getDataCurrent","searchLocation","a","query","trim","encodeURIComponent","process","lat","long","fetch","res","status","ok","json","dataCurent","getDataDaily","dataCurrent","queryDaily","coord","lon","resDaily","dataDaily","fetchWeather","name","sunrise","sys","sunset","temp","main","tempMin","temp_min","tempMax","temp_max","humidity","wind","speed","weather","icon","timeZone","timezone","nextDay","daily","WrapLoading","loadingAnimation","LoadingDisplay","Message","Loading","message","Error","defaultProps","Container","Location","Time","InfoWrap","LeftInfo","RightInfo","Image","img","Temp","span","weight","WeatherState","WrapSubInfo","SubInfo","FutureWrap","DayItem","Day","Forecast","today","Date","slice","getDay","getDate","getMonth","src","Math","trunc","toLocaleTimeString","hour","minute","map","day","index","date","setDate","Home","loadingMsg","setLoadingMsg","getYourWeatherLocation","navigator","geolocation","getCurrentPosition","getLocationSuccess","getLocationError","location","coords","latitude","longitude","then","useEffect","App","GlobalStyle","createGlobalStyle","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b511f797.chunk.js","sourcesContent":["import styled, { keyframes } from 'styled-components';\r\n\r\nexport const BackDrop = styled.div`\r\n  width: 100vw;\r\n  height: 100vh;\r\n  overflow: hidden;\r\n\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  z-index: -1;\r\n`;\r\n\r\nexport const Wrap = styled.div`\r\n  height: calc(70vh);\r\n  margin: 0 auto;\r\n  margin-top: 20px;\r\n`;\r\n\r\nexport const Title = styled.h1`\r\n  text-align: center;\r\n  color: white;\r\n  font-size: 50px;\r\n  text-shadow: 0 0 4px black;\r\n  }\r\n`;\r\nconst cloudXAnimation = keyframes`\r\n  0%{\r\n    transform:translateX(0);\r\n  }\r\n  // 50%{\r\n  //   transform: translateX(30px);\r\n  // }\r\n  100%{\r\n    transform:translateX(100%);\r\n  }\r\n`;\r\nconst cloudYAnimation = keyframes`\r\n  0%{\r\n    transform:translateY(0);\r\n  }\r\n  50%{\r\n    transform: translateY(30px);\r\n  }\r\n  100%{\r\n    transform:translateY(0);\r\n  }\r\n`;\r\n\r\nexport const Cloud = styled.div`\r\n  opacity: 0.2;\r\n  color: #021857;\r\n  position: absolute !important;\r\n  top: ${({ top }) => top + '%'};\r\n  left: ${({ left }) => left + '%'};\r\n  animation: ${cloudXAnimation} 8s linear ${({ delay }) => delay + 's'} infinite\r\n    alternate;\r\n\r\n  & svg {\r\n    animation: ${cloudYAnimation} 10s linear ${({ delay }) => delay + 's'}\r\n      infinite alternate;\r\n    font-size: ${({ size }) => size * 1.5 + 'px'};\r\n  }\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const Form = styled.form`\r\n  width: 60%;\r\n  max-width: 400px;\r\n  margin: 0 auto;\r\n  border-bottom: 1px solid #e3e3e3;\r\n\r\n  & div {\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n`;\r\nexport const Button = styled.button`\r\n  height: 30px;\r\n  width: 30px;\r\n  background: transparent;\r\n  border: none;\r\n  outline: none;\r\n  font-size: 20px;\r\n  color: #e3e3e3;\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n    color: #6b6b6b;\r\n  }\r\n`;\r\nexport const Input = styled.input`\r\n  font-size: 16px;\r\n  height: 30px;\r\n  background: transparent;\r\n  outline: none;\r\n  border: none;\r\n  width: calc(100% - 30px);\r\n  color: #6b6b6b;\r\n  padding: 0 5px;\r\n\r\n  &::placeholder {\r\n    color: #e3e3e3;\r\n  }\r\n`;\r\n","import React, { useState } from 'react';\r\nimport { Button, Input, Form } from './SearchLocationForm.styled';\r\nimport { BsSearch } from 'react-icons/bs';\r\n\r\nconst SearchLocationForm = (props) => {\r\n  const [searchValue, setSearchValue] = useState('');\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    props.onHandleSearch(searchValue);\r\n\r\n    setSearchValue('');\r\n  };\r\n  return (\r\n    <Form onSubmit={handleSubmit}>\r\n      <div>\r\n        <Input\r\n          placeholder=\"Search place ...\"\r\n          onChange={(e) => setSearchValue(e.target.value)}\r\n          value={searchValue}\r\n        ></Input>\r\n        <Button type=\"submit\">\r\n          <BsSearch />\r\n        </Button>\r\n      </div>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default SearchLocationForm;\r\n","import { useRef, useState } from 'react';\r\n\r\nconst useForecast = () => {\r\n  const [data, setData] = useState(null);\r\n  const [error, setError] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const ref = useRef(0);\r\n  ref.current += 1;\r\n  console.log(ref);\r\n  const getDataCurrent = async (searchLocation) => {\r\n    let query = '';\r\n    if (typeof searchLocation === 'string') {\r\n      if (searchLocation.trim() === '') {\r\n        setError('No place found!');\r\n        setLoading(false);\r\n        return;\r\n      }\r\n      query = `https://api.openweathermap.org/data/2.5/weather?q=${encodeURIComponent(\r\n        searchLocation\r\n      )}&units=metric&appid=${process.env.REACT_APP_API}`;\r\n    } else {\r\n      query = `https://api.openweathermap.org/data/2.5/weather?lat=${searchLocation.lat}&lon=${searchLocation.long}&appid=${process.env.REACT_APP_API}&units=metric`;\r\n    }\r\n    const res = await fetch(query);\r\n    if (res.status === 404) {\r\n      setError('No place found!');\r\n      setLoading(false);\r\n      return;\r\n    }\r\n    if (!res.ok) {\r\n      setError('Somethings went wrong!');\r\n      setLoading(false);\r\n      return;\r\n    }\r\n    const dataCurent = await res.json();\r\n    return dataCurent;\r\n  };\r\n\r\n  const getDataDaily = async (dataCurrent) => {\r\n    const queryDaily = `https://api.openweathermap.org/data/2.5/onecall?lat=${dataCurrent.coord.lat}&lon=${dataCurrent.coord.lon}&exclude=hourly&appid=${process.env.REACT_APP_API}&units=metric`;\r\n\r\n    const resDaily = await fetch(queryDaily);\r\n\r\n    if (!resDaily.ok) {\r\n      setError('Somethings went wrong!');\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    const dataDaily = await resDaily.json();\r\n\r\n    return dataDaily;\r\n  };\r\n\r\n  const fetchWeather = async (searchLocation) => {\r\n    setLoading(true);\r\n    setError(null);\r\n\r\n    const dataCurrent = await getDataCurrent(searchLocation);\r\n\r\n    if (!dataCurrent) {\r\n      return;\r\n    }\r\n    const dataDaily = await getDataDaily(dataCurrent);\r\n    if (!dataDaily) {\r\n      return;\r\n    }\r\n    console.log(dataCurrent);\r\n    const data = {\r\n      name: dataCurrent.name,\r\n      sunrise: dataCurrent.sys.sunrise,\r\n      sunset: dataCurrent.sys.sunset,\r\n      temp: dataCurrent.main.temp,\r\n      tempMin: dataCurrent.main.temp_min,\r\n      tempMax: dataCurrent.main.temp_max,\r\n      humidity: dataCurrent.main.humidity,\r\n      wind: dataCurrent.wind.speed,\r\n      status: dataCurrent.weather[0].main,\r\n      icon: dataCurrent.weather[0].icon,\r\n      timeZone: dataCurrent.timezone,\r\n      nextDay: dataDaily.daily,\r\n    };\r\n    setData(data);\r\n    setLoading(false);\r\n  };\r\n\r\n  return {\r\n    data,\r\n    error,\r\n    loading,\r\n    fetchWeather,\r\n    setError,\r\n  };\r\n};\r\n\r\nexport default useForecast;\r\n","import React from 'react';\r\nimport styled, { keyframes } from 'styled-components';\r\n\r\nconst WrapLoading = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n\r\n  margin-top: 30vh;\r\n`;\r\nconst loadingAnimation = keyframes`\r\n  0% {\r\n    top: 8px;\r\n    height: 64px;\r\n  }\r\n  50%, 100% {\r\n    top: 24px;\r\n    height: 32px;\r\n  }\r\n`;\r\nconst LoadingDisplay = styled.div`\r\n  display: inline-block;\r\n  position: relative;\r\n  width: 80px;\r\n  height: 80px;\r\n\r\n  & div {\r\n    background: #021857;\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: 8px;\r\n    width: 14px;\r\n    animation: ${loadingAnimation} 1.2s cubic-bezier(0, 0.5, 0.5, 1) infinite;\r\n  }\r\n  & div:nth-child(1) {\r\n    left: 8px;\r\n    animation-delay: -0.24s;\r\n  }\r\n  & div:nth-child(2) {\r\n    left: 32px;\r\n    animation-delay: -0.12s;\r\n  }\r\n  & div:nth-child(3) {\r\n    left: 56px;\r\n    animation-delay: 0;\r\n  }\r\n`;\r\nconst Message = styled.div`\r\n  color: #021857;\r\n`;\r\n\r\nconst Loading = (props) => {\r\n  return (\r\n    <>\r\n      <WrapLoading>\r\n        <LoadingDisplay>\r\n          <div></div>\r\n          <div></div>\r\n          <div></div>\r\n        </LoadingDisplay>\r\n        <Message>{props.message}</Message>\r\n      </WrapLoading>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Wrap = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-top: 30vh;\r\n  color: #021857;\r\n  letter-spacing: 1px;\r\n`;\r\nconst Error = (props) => {\r\n  return <Wrap>{props.message}</Wrap>;\r\n};\r\n\r\nError.propTypes = {\r\n  message: PropTypes.string,\r\n};\r\n\r\nError.defaultProps = {\r\n  message: 'Somethings went wrong !',\r\n};\r\nexport default Error;\r\n","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  width: 60%;\r\n  max-width: 830px;\r\n  margin: 0 auto;\r\n  padding-top: 20px;\r\n  color: #4a4a4a;\r\n\r\n  @media (max-width: 1200px) {\r\n    width: 70%;\r\n  }\r\n  @media (max-width: 1200px) {\r\n    width: 80%;\r\n  }\r\n`;\r\n\r\nexport const Location = styled.div`\r\n  font-size: 50px;\r\n  font-weight: bold;\r\n`;\r\nexport const Time = styled.div`\r\n  font-size: 15px;\r\n`;\r\n\r\nexport const InfoWrap = styled.div`\r\n  display: flex;\r\n  margin-top: 10px;\r\n  & > div {\r\n    height: 180px;\r\n  }\r\n\r\n  @media (max-width: 1200px) {\r\n    flex-direction: column;\r\n    align-items: center;\r\n  }\r\n  @media (max-width: 767px) {\r\n    & > div {\r\n      height: 160px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const LeftInfo = styled.div`\r\n  position: relative;\r\n  padding-left: 30px;\r\n  display: flex;\r\n  border-right: 1px solid #4a4a4a;\r\n  & > div {\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding: 0 30px;\r\n  }\r\n\r\n  @media (max-width: 1200px) {\r\n    border-right: none;\r\n  }\r\n  @media (max-width: 767px) {\r\n    & span {\r\n      font-size: 125px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const RightInfo = styled.div`\r\n  flex-grow: 1;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nexport const Image = styled.img`\r\n  height: 100%;\r\n  width: auto;\r\n`;\r\n\r\nexport const Temp = styled.span`\r\n  font-size: ${({ size }) => size + 'px'};\r\n  font-weight: ${({ weight }) => weight};\r\n  position: relative;\r\n\r\n  &:after {\r\n    content: 'o';\r\n    position: absolute;\r\n    top: ${({ size }) => '-' + size / 9 + 'px'};\r\n    right: ${({ size }) => '-' + size / 6 + 'px'};\r\n    font-size: ${({ size }) => size / 3 + 'px'};\r\n    font-weight: ${({ weight }) => weight};\r\n  }\r\n`;\r\n\r\nexport const WeatherState = styled.div`\r\n  font-size: 30px;\r\n  position: absolute;\r\n  bottom: 0;\r\n`;\r\n\r\nexport const WrapSubInfo = styled.div`\r\n  width: calc(100% / 3);\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 20px 0;\r\n`;\r\n\r\nexport const Title = styled.div``;\r\nexport const SubInfo = styled.div`\r\n  font-size: 20px;\r\n  font-weight: bold;\r\n`;\r\n\r\nexport const FutureWrap = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n\r\n  justify-content: space-between;\r\n  margin-top: 30px;\r\n\r\n  @media (max-width: 1200px) {\r\n    flex-wrap: wrap;\r\n  }\r\n  @media (max-width: 767px) {\r\n    justify-content: space-around;\r\n  }\r\n`;\r\nexport const DayItem = styled.div`\r\n  min-width: 100px;\r\n  margin: 0 10px;\r\n  height: 150px;\r\n  text-align: center;\r\n  border-radius: 4px;\r\n  border: 1px solid #c1c1c1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n  & img {\r\n    height: 70px;\r\n    width: auto;\r\n  }\r\n\r\n  @media (max-width: 767px) {\r\n    min-width: 140px;\r\n    height: 160px;\r\n    margin-bottom: 20px;\r\n  }\r\n  @media (max-width: 600px) {\r\n    min-width: 100px;\r\n    height: 150px;\r\n    margin-bottom: 20px;\r\n  }\r\n`;\r\nexport const Day = styled.div`\r\n  padding: 5px 0;\r\n  font-weight: bold;\r\n  border-bottom: 1px solid #c1c1c1;\r\n`;\r\n","import React from 'react';\r\nimport {\r\n  Container,\r\n  Location,\r\n  Time,\r\n  InfoWrap,\r\n  LeftInfo,\r\n  RightInfo,\r\n  Image,\r\n  Temp,\r\n  WeatherState,\r\n  WrapSubInfo,\r\n  Title,\r\n  SubInfo,\r\n  FutureWrap,\r\n  DayItem,\r\n  Day,\r\n} from './Forecast.styled.js';\r\n\r\nconst Forecast = ({ weather }) => {\r\n  const today = new Date();\r\n  const dayOfWeek = [\r\n    'Sunday',\r\n    'Monday',\r\n    'Tuesday',\r\n\r\n    'Wednesday',\r\n    'Thursday',\r\n    'Friday',\r\n    'Saturday',\r\n  ];\r\n  var months = [\r\n    'January',\r\n    'February',\r\n    'March',\r\n    'April',\r\n    'May',\r\n    'June',\r\n    'July',\r\n    'August',\r\n    'September',\r\n    'October',\r\n    'November',\r\n    'December',\r\n  ];\r\n\r\n  const nextDay = weather.nextDay.slice(1, 6);\r\n  return (\r\n    <Container>\r\n      <Location>{weather.name}</Location>\r\n      <Time>\r\n        {dayOfWeek[today.getDay(0)] +\r\n          ', ' +\r\n          today.getDate() +\r\n          ' ' +\r\n          months[today.getMonth()]}\r\n      </Time>\r\n      <InfoWrap>\r\n        <LeftInfo>\r\n          <Image\r\n            src={`http://openweathermap.org/img/wn/${weather.icon}@2x.png`}\r\n          />\r\n          <div>\r\n            <Temp size=\"150\" weight=\"700\">\r\n              {Math.trunc(weather.temp)}\r\n            </Temp>\r\n            <WeatherState>{weather.status}</WeatherState>\r\n          </div>\r\n        </LeftInfo>\r\n        <RightInfo>\r\n          <WrapSubInfo>\r\n            <Temp size=\"20\" weight=\"700\">\r\n              {Math.trunc(weather.tempMax)}\r\n            </Temp>\r\n            <Title>High</Title>\r\n          </WrapSubInfo>\r\n          <WrapSubInfo>\r\n            <SubInfo>{weather.wind}m/s</SubInfo>\r\n            <Title>Wind</Title>\r\n          </WrapSubInfo>\r\n          <WrapSubInfo>\r\n            <SubInfo>\r\n              {new Date(\r\n                weather.sunrise * 1000\r\n              ).toLocaleTimeString('en-US', {\r\n                hour: '2-digit',\r\n                minute: '2-digit',\r\n              })}\r\n            </SubInfo>\r\n            <Title>Sunrise</Title>\r\n          </WrapSubInfo>\r\n          <WrapSubInfo>\r\n            <Temp size=\"20\" weight=\"700\">\r\n              {Math.trunc(weather.tempMin)}\r\n            </Temp>\r\n            <Title>Low</Title>\r\n          </WrapSubInfo>\r\n          <WrapSubInfo>\r\n            <SubInfo>{weather.humidity}%</SubInfo>\r\n            <Title>Humidity</Title>\r\n          </WrapSubInfo>\r\n          <WrapSubInfo>\r\n            <SubInfo>\r\n              {new Date(\r\n                weather.sunset * 1000\r\n              ).toLocaleTimeString([], {\r\n                hour: '2-digit',\r\n                minute: '2-digit',\r\n              })}\r\n            </SubInfo>\r\n            <Title>Sunset</Title>\r\n          </WrapSubInfo>\r\n        </RightInfo>\r\n      </InfoWrap>\r\n      <FutureWrap>\r\n        {nextDay.map((day, index) => {\r\n          let date = new Date();\r\n          date.setDate(today.getDate() + index + 1);\r\n          return (\r\n            <DayItem key={index}>\r\n              <Day>\r\n                {date.getDate()}/{date.getMonth() + 1}\r\n              </Day>\r\n              <div>\r\n                <Image\r\n                  src={`http://openweathermap.org/img/wn/${day.weather[0].icon}@2x.png`}\r\n                />\r\n              </div>\r\n              <div>\r\n                <Temp size=\"20\" weight=\"800\">\r\n                  {Math.trunc(day.temp.day)}\r\n                </Temp>\r\n              </div>\r\n            </DayItem>\r\n          );\r\n        })}\r\n      </FutureWrap>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Forecast;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport { BackDrop, Wrap, Title, Cloud } from './Home.styled';\r\nimport SearchLocationForm from '../form/SearchLocationForm';\r\nimport { BsCloud } from 'react-icons/bs';\r\nimport useForecast from '../../hooks/useForecast';\r\nimport Loading from '../loading/Loading';\r\nimport Error from '../error/Error';\r\nimport Forecast from '../forecast/Forecast';\r\n\r\nconst Home = (props) => {\r\n  const [loadingMsg, setLoadingMsg] = useState(\r\n    'Loading your location weather...'\r\n  );\r\n  const { data, loading, error, setError, fetchWeather } = useForecast();\r\n\r\n  if (data === null) {\r\n    console.log('init weather null');\r\n  }\r\n  const handleSearch = (query) => {\r\n    if (query.trim() === '') {\r\n      setLoadingMsg('Loading your location weather...');\r\n      getYourWeatherLocation();\r\n    } else {\r\n      setLoadingMsg('Loading weather in ' + query);\r\n      fetchWeather(query);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getYourWeatherLocation();\r\n  }, []);\r\n\r\n  function getYourWeatherLocation() {\r\n    console.log('use effect');\r\n    if (!navigator.geolocation) {\r\n      setError('Geolocation is not supported by your browser');\r\n    } else {\r\n      console.log(navigator.geolocation.getCurrentPosition);\r\n      navigator.geolocation.getCurrentPosition(\r\n        getLocationSuccess,\r\n        getLocationError\r\n      );\r\n    }\r\n  }\r\n\r\n  function getLocationSuccess(location) {\r\n    console.log(' step 2');\r\n    fetchWeather({\r\n      lat: location.coords.latitude,\r\n      long: location.coords.longitude,\r\n    }).then(() => {\r\n      console.log('step 3');\r\n    });\r\n  }\r\n\r\n  function getLocationError() {\r\n    setError('Cannot get your location!');\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <BackDrop>\r\n        <Cloud size=\"70\" top=\"10\" left=\"10\" delay=\"0\">\r\n          <BsCloud />\r\n        </Cloud>\r\n        <Cloud size=\"50\" top=\"40\" left=\"70\" delay=\"1\">\r\n          <BsCloud />\r\n        </Cloud>\r\n        <Cloud size=\"60\" top=\"50\" left=\"50\" delay=\"2\">\r\n          <BsCloud />\r\n        </Cloud>\r\n        <Cloud size=\"60\" top=\"60\" left=\"80\" delay=\"0\">\r\n          <BsCloud />\r\n        </Cloud>\r\n        <Cloud size=\"40\" top=\"50\" left=\"30\" delay=\"2\">\r\n          <BsCloud />\r\n        </Cloud>\r\n        <Cloud size=\"70\" top=\"80\" left=\"45\" delay=\"3.5\">\r\n          <BsCloud />\r\n        </Cloud>\r\n        <Cloud size=\"80\" top=\"80\" left=\"85\" delay=\"1\">\r\n          <BsCloud />\r\n        </Cloud>\r\n        <Cloud size=\"50\" top=\"30\" left=\"90\" delay=\"3\">\r\n          <BsCloud />\r\n        </Cloud>\r\n        <Cloud size=\"50\" top=\"0\" left=\"90\" delay=\"0\">\r\n          <BsCloud />\r\n        </Cloud>\r\n        <Cloud size=\"60\" top=\"10\" left=\"30\" delay=\"2\">\r\n          <BsCloud />\r\n        </Cloud>\r\n        <Cloud size=\"50\" top=\"80\" left=\"10\" delay=\"3\">\r\n          <BsCloud />\r\n        </Cloud>\r\n      </BackDrop>\r\n      <Wrap>\r\n        <Title>\r\n          Weather<span> FORECAST</span>\r\n        </Title>\r\n        <SearchLocationForm onHandleSearch={handleSearch} />\r\n        {loading && <Loading message={loadingMsg}></Loading>}\r\n        {error && <Error message={error}></Error>}\r\n        {!error && !loading && <Forecast weather={data}></Forecast>}\r\n      </Wrap>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { Fragment } from 'react';\nimport {Home} from './components/pages';\n\nfunction App() {\n  return (\n    <Fragment>\n      <Home />\n    </Fragment>\n  );\n}\n\nexport default App;\n","import { createGlobalStyle } from 'styled-components';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n*,\r\n*:after,\r\n*:before{\r\n    margin:0;\r\n    padding:0;\r\n    box-sizing:border-box;\r\n}\r\n\r\nul{\r\n    list-style: none;\r\n}\r\n\r\na{\r\n    text-decoration: none;\r\n}\r\n\r\n@import url('https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,300;0,400;0,700;1,300;1,400;1,700&display=swap');\r\n\r\nbody{\r\n    font-family: 'Roboto', sans-serif;\r\n}\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport GlobalStyle from './theme/globalStyled'\n\nReactDOM.render(\n  <>\n    <GlobalStyle/>\n    <App />\n  </>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}